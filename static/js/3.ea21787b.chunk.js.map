{"version":3,"sources":["hoc/withAuthRedirect.tsx","Profile/Profile.module.css","Profile/ProfileInfo.module.css","Profile/MyPosts/MyPosts.module.css","Profile/MyPosts/Post/Post.module.css","Profile/ProfileStatus.tsx","Profile/ProfileStatusWithHooks.tsx","Profile/ProfileInfo.tsx","Profile/MyPosts/Post/Post.tsx","Profile/MyPosts/MyPosts.tsx","Profile/MyPosts/MyPostsContainer.tsx","Profile/Profile.tsx","Profile/ProfileContainer.tsx","components/common/addMessageForm/AddMessageForm.tsx","components/common/addMessageForm/addMessageForm.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","restProps","to","React","connect","module","exports","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","snapshot","onChange","autoFocus","onBlur","onDoubleClick","ProfileStatusWithHooks","useState","setEditMode","setStatus","useEffect","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","fullName","aboutMe","Preloader","Post","item","post","message","MyPosts","postsElements","profilePage","posts","map","p","id","postsBlock","AddMessageForm","callback","newMessageTextarea","addPost","PureComponent","MyPostsContainer","dispatch","addPostActionCreator","Profile","img","alt","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","withRouter","validateUsername","error","length","initialValues","newMessage","onSubmit","values","errors","touched","handleSubmit","handleChange","handleBlur","isSubmitting","name","component","placeholder","validate","style","border","type","disabled"],"mappings":"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","file":"static/js/3.ea21787b.chunk.js","sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router';\r\nimport {AppStateType} from '../Redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype mapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state:AppStateType):mapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectType> {\r\n        render() {\r\n            const {isAuth, ...restProps} = this.props\r\n            if(!isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n\r\nconst ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__2eU8b\",\"img\":\"Profile_img__2Uy67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__tQbB7\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__uG3cG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1w_wY\",\"post\":\"MyPosts_post__1WmCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__24sz1\"};","import React from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange:  React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode\r\n                    ? <div>\r\n                        <span onDoubleClick={this.activateEditMode}>\r\n                            {this.props.status || '----'}\r\n                        </span>\r\n                    </div>\r\n                    : <div>\r\n                        <input onChange={this.onStatusChange}\r\n                               autoFocus = {true}\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            {props.status || '----'}\r\n                        </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    onBlur={deactivateEditMode}\r\n                    autoFocus={true}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from '../components/common/preloader/Preloader';\r\nimport {ProfileType} from '../Redux/profile-reducer';\r\nimport {ProfileStatus} from './ProfileStatus';\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\nconst ProfileInfo = ({profile, status, updateUserStatus}: ProfileInfoPropsType) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatus status={status}\r\n                               updateUserStatus={updateUserStatus}\r\n                />\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateUserStatus={updateUserStatus}\r\n                />\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostType} from '../../../Redux/profile-reducer';\r\n\r\nconst defaultImage = 'https://img2.freepng.ru/20180623/iqh/kisspng-computer-icons-avatar-social-media-blog-font-aweso-avatar-icon-5b2e99c40ce333.6524068515297806760528.jpg';\r\n\r\ntype PostPropsType = {\r\n    post: PostType\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={defaultImage}/>\r\n            <div>\r\n                <span>{props.post.message}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {ProfileDataType} from '../../Redux/profile-reducer';\r\nimport {AddMessageForm} from '../../components/common/addMessageForm/AddMessageForm';\r\n\r\ntype MyPostsPropsType= {\r\n    profilePage:ProfileDataType\r\n    addPost:(newMessageTextarea:string)=> void\r\n}\r\n// React.PureComponent - did shouldComponentUpdated inside\r\nclass MyPosts extends React.PureComponent<MyPostsPropsType> {\r\n\r\n    // React.Component\r\n/*    shouldComponentUpdate(nextProps: Readonly<MyPostsPropsType>, nextState: Readonly<{}>): boolean {\r\n        return nextProps !== this.props || nextState !== this.state\r\n    }*/\r\n\r\n    render() {\r\n        let postsElements = this.props.profilePage.posts.map(p => <Post key={p.id} post={p}/>)\r\n\r\n        const onAddPost = (newMessageTextarea: string) => {\r\n            this.props.addPost(newMessageTextarea)\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddMessageForm callback={onAddPost}/>\r\n                <div className={s.post}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {\r\n    addPostActionCreator,\r\n    ProfileDataType\r\n} from '../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\n\r\ntype mapStateToPropsType = {\r\n    profilePage:ProfileDataType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newMessageTextarea:string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: mapStateToPropsType):mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newMessageTextarea:string) => {\r\n            dispatch(addPostActionCreator(newMessageTextarea))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from '../Redux/profile-reducer';\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status:string)=> void\r\n}\r\n\r\nconst Profile = (props:ProfilePropsType) => {\r\n    return (\r\n        <div>\r\n            <img className={s.img} src=\"http://user-life.com/uploads/posts/2018-08/1535615328_kak-udalit-avatarku-postavit-foto-sdelat-zagruzit-dobavit-telegramm-skayp-vayber-vatsap-windows-10.gif\" alt=\"my avatar\"/>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {getUserStatus, getUserProfile, ProfileType, updateUserStatus} from '../Redux/profile-reducer';\r\nimport {AppStateType} from '../Redux/redux-store';\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    authorizedUserId: null | string\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchToPropsType\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype CommonPropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<CommonPropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId &&  this.props.authorizedUserId!== null) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.authorizedUserId) return <Redirect to={'/login'}/>\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from 'react';\r\nimport {Field, Formik} from 'formik';\r\nimport s from './addMessageForm.module.css'\r\n\r\n\r\ntype DefaultTextareaPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\n// type DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n// type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype FormPropsType = DefaultTextareaPropsType & {\r\n    callback: (newMessageTextarea: string) => void\r\n}\r\n\r\nexport const AddMessageForm = (props: FormPropsType) => {\r\n    const addNewMessage = (values: any) => {\r\n        props.callback(values.newMessage)\r\n    }\r\n\r\n    function validateUsername(value:string) {\r\n        let error;\r\n        if (value === '') {\r\n            error = 'Message is required';\r\n        }if ( value.length > 30 ){\r\n            error = 'Max length is 30 symbols '\r\n        }\r\n        return error;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessage: ''}}\r\n\r\n            onSubmit={addNewMessage}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <Field\r\n                                name=\"newMessage\"\r\n                                component=\"textarea\"\r\n                                placeholder=\"Enter your message\"\r\n                                validate={validateUsername}\r\n                                style={errors.newMessage && touched.newMessage && {border: '2px solid red'}}\r\n                            />\r\n                       </div>\r\n                        <span className={s.error}>{errors.newMessage}</span>\r\n                        <div>\r\n                            <button type=\"submit\" disabled={errors.newMessage ? true : false} >\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"addMessageForm_error__3lgQI\"};"],"sourceRoot":""}